{"version":3,"sources":["components/LinkInClass.js","config/global_constants.js","components/Register.js","components/ResetDatabase.js","components/Login.js","components/Logout.js","components/AddCar.js","components/EditCar.js","components/DeleteCar.js","components/CarTableRow.js","components/CarTable.js","components/DisplayAllCars.js","components/LoggedInRoute.js","App.js","serviceWorker.js","index.js"],"names":["LinkInClass","tabIndex","className","this","props","onClick","event","value","Component","ACCESS_LEVEL_NORMAL_USER","ACCESS_LEVEL_ADMIN","SERVER_HOST","Register","handleChange","e","setState","target","name","handleSubmit","preventDefault","axios","post","state","email","password","then","res","data","errorMessage","console","log","localStorage","accessLevel","token","isRegistered","confirmPassword","noValidate","id","to","type","placeholder","autoComplete","onChange","ref","input","inputToFocus","title","ResetDatabase","resetUsersModel","clear","isReset","Login","isLoggedIn","Logout","AddCar","carObject","model","colour","year","price","headers","redirectToDisplayAllCars","focus","Group","controlId","Label","Control","EditCar","put","match","params","get","DeleteCar","delete","CarTableRow","car","_id","CarTable","cars","map","key","DisplayAllCars","LoggedInRoute","component","exact","path","rest","render","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a95b95c.chunk.js","sourcesContent":["//Author: Derek O Reilly\n//\n// Helper Component class that allows us to have a button that render the same way as a <Link> component\n// Use this class to link to functions within the same class\n// Use <Link> to link to Components that are in other routes\nimport React, {Component} from \"react\"\n\n\nexport default class LinkInClass extends Component\n{\n    render()\n    {\n        return (\n            <span tabIndex=\"0\" className={this.props.className} onClick={(event) => {this.props.onClick(event)}}>     \n                {this.props.value}\n            </span>\n        )\n    }\n}","// This file holds global constants that are visible on the Client-side\n\n\n// Access level\nexport const ACCESS_LEVEL_GUEST = 0\nexport const ACCESS_LEVEL_NORMAL_USER = 1\nexport const ACCESS_LEVEL_ADMIN = 2\n\n// Server\nexport const SERVER_HOST = `http://localhost:4000`","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Register extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",    \n            isRegistered:false\n        } \n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully registered\n                { \n                    console.log(\"User registered and logged in\")\n                    \n                    localStorage.name = res.data.name\n                    localStorage.accessLevel = res.data.accessLevel                    \n                    localStorage.token = res.data.token\n                    \n                    this.setState({isRegistered:true})\n                }        \n            }\n            else\n            {\n                console.log(\"Registration failed\")\n            }\n        })   \n    }\n\n\n    render() \n    {     \n        return (\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\n           \n                {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \n            \n                <h2>New User Registration</h2>\n           \n                <input  \n                    name = \"name\"              \n                    type = \"text\"\n                    placeholder = \"Name\"\n                    autoComplete=\"name\"\n                    value = {this.state.name}\n                    onChange = {this.handleChange}\n                    ref = {(input) => { this.inputToFocus = input }} \n                /><br/>           \n\n\t        <input  \n                    name = \"email\"              \n                    type = \"email\"\n                    placeholder = \"Email\"\n                    autoComplete=\"email\"\n                    value = {this.state.email}\n                    onChange = {this.handleChange}\n                /><br/>              \n\n\t        <input  \n                    name = \"password\"           \n                    type = \"password\"\n                    placeholder = \"Password\"\n                    autoComplete=\"password\"\n                    title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\n                    value = {this.state.password}\n                    onChange = {this.handleChange}\n                /><br/>           \n\n                <input          \n                    name = \"confirmPassword\"    \n                    type = \"password\"\n                    placeholder = \"Confirm password\"\n                    autoComplete=\"confirmPassword\"\n                    value = {this.state.confirmPassword}\n                    onChange = {this.handleChange}\n                /><br/><br/>\n                \n                <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>   \n            </form>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class ResetDatabase extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {   \n            isReset:false\n        } \n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n\n    resetUsersModel = () =>\n    {\n        axios.post(`${SERVER_HOST}/users/reset_user_collection`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully reset the User collection\n                { \n                    console.log(\"User collection reset\")\n                    \n                    localStorage.clear()\n                }        \n            }\n            else\n            {\n                console.log(\"Failed to reset User collection\")\n            }\n            \n            this.setState({isReset:true})\n        })   \n    }\n\n\n\n    render() \n    { \n        return (\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n               {this.state.isReset ? <Redirect to=\"/DisplayAllCars\"/> : null} \n\n                <p>\"Reset User Database\" is only for testing purposes.<br/>All code on the client-side and server-side relating to resetting the database should be removed from any development release</p>\n                <LinkInClass value=\"Reset User Database\" className=\"red-button\" onClick={this.resetUsersModel}/> <br/><br/>\n                <p>Reset the database and set up an administrator with:<br/> * email <strong>admin@admin.com</strong><br/> * password <strong>123!\"£qweQWE</strong></p>        \n            \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n            </form>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            email:\"\",\n            password:\"\",\n            isLoggedIn:false\n        }\n    }\n        \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        axios.post(`${SERVER_HOST}/users/login/${this.state.email}/${this.state.password}`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully logged in\n                { \n                    console.log(\"User logged in\")\n                    \n                    localStorage.name = res.data.name\n                    localStorage.accessLevel = res.data.accessLevel  \n                    localStorage.token = res.data.token\n                    \n                    this.setState({isLoggedIn:true})\n                }        \n            }\n            else\n            {\n                console.log(\"Login failed\")\n            }\n        })                \n    }\n\n\n    render()\n    {            \n        return (\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\n                <h2>Login</h2>\n                \n                {this.state.isLoggedIn ? <Redirect to=\"/DisplayAllCars\"/> : null} \n                \n                <input \n                    type = \"email\" \n                    name = \"email\" \n                    placeholder = \"Email\"\n                    autoComplete=\"email\"\n                    value={this.state.email} \n                    onChange={this.handleChange}\n                /><br/>\n                    \n                <input \n                    type = \"password\" \n                    name = \"password\" \n                    placeholder = \"Password\"\n                    autoComplete=\"password\"\n                    value={this.state.password} \n                    onChange={this.handleChange}\n                /><br/><br/>\n                \n                <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/> \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>                                      \n            </form>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Logout extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            isLoggedIn:true\n        }\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n        \n        axios.post(`${SERVER_HOST}/users/logout`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                { \n                    console.log(\"User logged out\")\n                    localStorage.clear() \n                    \n                    this.setState({isLoggedIn:false}) \n                }\n            }\n            else\n            {\n                console.log(\"Logout failed\")\n            }\n        }) \n    }\n\n\n    render()\n    {\n        return (\n            <div>   \n        \n                {!this.state.isLoggedIn ? <Redirect to=\"/DisplayAllCars\"/> : null} \n                  \n                <LinkInClass value=\"Log out\" className=\"red-button\" onClick={this.handleSubmit}/> \n            </div>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport Form from \"react-bootstrap/Form\"\n\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class AddCar extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            model:\"\",\n            colour:\"\",\n            year:\"\",\n            price:\"\",\n            redirectToDisplayAllCars:localStorage.accessLevel < ACCESS_LEVEL_ADMIN\n        }\n    }\n\n\n    componentDidMount() \n    {     \n        this.inputToFocus.focus()        \n    }\n \n \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        const carObject = {\n            model: this.state.model,\n            colour: this.state.colour,\n            year: this.state.year,\n            price: this.state.price\n        }\n\n        axios.post(`${SERVER_HOST}/cars`, carObject, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {   \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {   \n                    console.log(\"Record added\")\n                    this.setState({redirectToDisplayAllCars:true})\n                } \n            }\n            else\n            {\n                console.log(\"Record not added\")\n            }\n        })\n    }\n\n\n    render()\n    {        \n        return (\n            <div className=\"form-container\"> \n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}                                            \n                    \n                <Form>\n                    <Form.Group controlId=\"model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                    </Form.Group>\n    \n                    <Form.Group controlId=\"colour\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                    </Form.Group>\n    \n                    <Form.Group controlId=\"year\">\n                        <Form.Label>Year</Form.Label>\n                        <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                    </Form.Group>\n    \n                    <Form.Group controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                    </Form.Group> \n            \n                    <LinkInClass value=\"Add\" className=\"green-button\" onClick={this.handleSubmit}/>            \n            \n                    <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {ACCESS_LEVEL_NORMAL_USER, SERVER_HOST} from \"../config/global_constants\"\n\nexport default class EditCar extends Component \n{\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            model: ``,\n            colour: ``,\n            year: ``,\n            price: ``,\n            redirectToDisplayAllCars:localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER\n        }\n    }\n\n    componentDidMount() \n    {      \n        this.inputToFocus.focus()\n  \n        axios.get(`${SERVER_HOST}/cars/${this.props.match.params.id}`, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                { \n                    this.setState({\n                        model: res.data.model,\n                        colour: res.data.colour,\n                        year: res.data.year,\n                        price: res.data.price\n                    })\n                }\n            }\n            else\n            {\n                console.log(`Record not found`)\n            }\n        })\n    }\n\n\n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        const carObject = {\n            model: this.state.model,\n            colour: this.state.colour,\n            year: this.state.year,\n            price: this.state.price\n        }\n\n        axios.put(`${SERVER_HOST}/cars/${this.props.match.params.id}`, carObject, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {             \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {      \n                    console.log(`Record updated`)\n                    this.setState({redirectToDisplayAllCars:true})\n                }\n            }\n            else\n            {\n                console.log(`Record not updated`)\n            }\n        })\n    }\n\n\n    render() \n    {\n        return (\n            <div className=\"form-container\">\n    \n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}  \n                        \n                <Form>\n                    <Form.Group controlId=\"model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"colour\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"year\">\n                        <Form.Label>Year</Form.Label>\n                        <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                    </Form.Group>\n        \n                    <Form.Group controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                    </Form.Group>\n  \n                    <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \n    \n                    <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\n\r\nexport default class DeleteCar extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            redirectToDisplayAllCars:false\r\n        }\r\n    }\r\n    \r\n    \r\n    componentDidMount() \r\n    {   \r\n        axios.delete(`${SERVER_HOST}/cars/${this.props.match.params.id}`, {headers:{\"authorization\":localStorage.token}})\r\n        .then(res => \r\n        {\r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else // success\r\n                { \r\n                    console.log(\"Record deleted\")\r\n                }\r\n                this.setState({redirectToDisplayAllCars:true})\r\n            }\r\n            else \r\n            {\r\n                console.log(\"Record not deleted\")\r\n            }\r\n        })\r\n    }\r\n  \r\n  \r\n    render() \r\n    {\r\n        return (\r\n            <div>   \r\n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}                      \r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nimport {ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN} from \"../config/global_constants\"\n\n\nexport default class CarTableRow extends Component \n{    \n    render() \n    {\n        return (\n            <tr>\n                <td>{this.props.car.model}</td>\n                <td>{this.props.car.colour}</td>\n                <td>{this.props.car.year}</td>\n                <td>{this.props.car.price}</td>\n                <td>\n                    {localStorage.accessLevel > ACCESS_LEVEL_GUEST ? <Link className=\"green-button\" to={\"/EditCar/\" + this.props.car._id}>Edit</Link> : null}\n                    \n                    {localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? <Link className=\"red-button\" to={\"/DeleteCar/\" + this.props.car._id}>Delete</Link> : null}   \n                </td>\n            </tr>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport CarTableRow from \"./CarTableRow\"\n\n\nexport default class CarTable extends Component \n{\n    render() \n    {\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>Model</th>\n                        <th>Colour</th>\n                        <th>Year</th>\n                        <th>Price</th>\n                        <th> </th>\n                    </tr>\n                </thead>\n                  \n                <tbody>\n                    {this.props.cars.map((car) => <CarTableRow key={car._id} car={car}/>)}\n                </tbody>\n            </table>      \n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nimport axios from \"axios\"\n\nimport CarTable from \"./CarTable\"\nimport Logout from \"./Logout\"\n\nimport {ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class DisplayAllCars extends Component \n{\n    constructor(props) \n    {\n        super(props)\n        \n        this.state = {\n            cars:[]\n        }\n    }\n    \n    \n    componentDidMount() \n    {\n        axios.get(`${SERVER_HOST}/cars`)\n        .then(res => \n        {\n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {           \n                    console.log(\"Records read\")   \n                    this.setState({cars: res.data}) \n                }   \n            }\n            else\n            {\n                console.log(\"Record not found\")\n            }\n        })\n    }\n\n  \n    render() \n    {   \n        return (           \n            <div className=\"form-container\">\n                {\n                    localStorage.accessLevel > ACCESS_LEVEL_GUEST \n                    ? <div className=\"logout\">\n                        <Logout/>\n                      </div>\n                    :\n                      <div>\n                        <Link className=\"green-button\" to={\"/Login\"}>Login</Link>\n                        <Link className=\"blue-button\" to={\"/Register\"}>Register</Link>  \n                        <Link className=\"red-button\" to={\"/ResetDatabase\"}>Reset Database</Link>  <br/><br/><br/>\n                      </div>\n                }\n                \n                <div className=\"table-container\">\n                    <CarTable cars={this.state.cars} />                         \n                    {\n                        localStorage.accessLevel >= ACCESS_LEVEL_ADMIN \n                        ?\n                          <div className=\"add-new-car\">\n                            <Link className=\"blue-button\" to={\"/AddCar\"}>Add New Car</Link>\n                          </div>\n                        :\n                          null\n                    }\n                </div>\n            </div> \n        )\n    }\n}","import React from 'react'\nimport {Route, Redirect } from \"react-router-dom\"\n\nimport {ACCESS_LEVEL_GUEST} from \"../config/global_constants\"\n\nconst LoggedInRoute = ({ component: Component, exact, path, ...rest }) => \n(\n    <Route\n        exact = {exact}\n        path = {path}\n        render = {props => localStorage.accessLevel > ACCESS_LEVEL_GUEST ? <Component {...props} {...rest} /> : <Redirect to=\"/DisplayAllCars\"/> }\n    />\n)\n\nexport default LoggedInRoute","import React, {Component} from \"react\"\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\n\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./css/App.css\"\n\nimport Register from \"./components/Register\"\nimport ResetDatabase from \"./components/ResetDatabase\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport AddCar from \"./components/AddCar\"\nimport EditCar from \"./components/EditCar\"\nimport DeleteCar from \"./components/DeleteCar\"\nimport DisplayAllCars from \"./components/DisplayAllCars\"\nimport LoggedInRoute from \"./components/LoggedInRoute\"\n\n\nimport {ACCESS_LEVEL_GUEST} from \"./config/global_constants\"\n\n\nif (typeof localStorage.accessLevel === \"undefined\")\n{\n    localStorage.name = \"GUEST\"\n    localStorage.accessLevel = ACCESS_LEVEL_GUEST\n    localStorage.token = null\n}\n\n    \nexport default class App extends Component \n{\n    render() \n    {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/Register\" component={Register} />\n                    <Route exact path=\"/ResetDatabase\" component={ResetDatabase} />                    \n                    <Route exact path=\"/\" component={DisplayAllCars} />\n                    <Route exact path=\"/Login\" component={Login} />\n                    <LoggedInRoute exact path=\"/Logout\" component={Logout} />\n                    <LoggedInRoute exact path=\"/AddCar\" component={AddCar} />\n                    <LoggedInRoute exact path=\"/EditCar/:id\" component={EditCar} />\n                    <LoggedInRoute exact path=\"/DeleteCar/:id\" component={DeleteCar} />\n                    <Route exact path=\"/DisplayAllCars\" component={DisplayAllCars}/> \n                    <Route path=\"*\" component={DisplayAllCars}/>                            \n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./css/index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\n\n\nReactDOM.render(<App/>, document.getElementById(`root`))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}